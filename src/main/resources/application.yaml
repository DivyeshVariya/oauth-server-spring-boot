#server:
#  port: 8080
#
#spring:
#  application:
#    name: oauth-server
#  data:
#    mongodb:
#      uri: mongodb
#      database: oauth-server
#      auto-index-creation: true
#  output:
#    ansi:
#      enabled: ALWAYS
#  security:
#    oauth2:
#      authorization-server:
#        issuer: http://localhost:8080
#      client:
#        provider:
#          spring:
#            issuer-uri: http://localhost:8080

## Micrometer configuration
#management:
#  endpoints:
#    web:
#      exposure:
#        include: "*"

#server:
#  port: 9000
#
#logging:
#  level:
#    io.itpl.oauthserver: trace
#
#spring:
#  security:
#    user:
#      name: user
#      password: password
#    oauth2:
#      authorizationserver:
#        client:
#          oidc-client:
#            registration:
#              client-id: "oidc-client"
##              client-secret: "{noop}secret"
#              client-authentication-methods:
#                - "client_secret_basic"
#              authorization-grant-types:
#                - "authorization_code"
#                - "refresh_token"
#                - "client_credentials"
#              redirect-uris:
#                - "http://127.0.0.1:8080/login/oauth2/code/oidc-client"
#              post-logout-redirect-uris:
#                - "http://127.0.0.1:8080/"
#              scopes:
#                - "openid"
#                - "profile"
#            require-authorization-consent: true

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
# H2 Database Configuration
spring:
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: password
    platform: h2
  h2:
    console:
      enabled: true
      settings.web-allow-others: true
      path: /h2-console


